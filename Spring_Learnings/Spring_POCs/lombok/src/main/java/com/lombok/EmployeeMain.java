package com.lombok;

public class EmployeeMain {
    public static void main(String[] args) {
        // 1. Creating Employee objects using the AllArgsConstructor generated by Lombok
        Employee emp1 = new Employee(1L, "John Doe", "Engineering", 75000, "john.doe@example.com");

        // 2. Creating Employee object using Lombok's Builder Pattern
        Employee emp2 = Employee.builder()
                .id(2L)
                .name("Jane Smith")
                .department("Marketing")
                .salary(60000)
                .email("jane.smith@example.com")
                .build();

        // 3. Using getters and setters generated by Lombok
        emp1.setSalary(80000);
        System.out.println("Updated Salary of emp1: " + emp1.getSalary());

        // 4. Using Lombok-generated toString() method
        System.out.println(emp1.toString());
        System.out.println(emp2.toString());

        // 5. Using Lombok-generated equals() method (checking if emp1 and emp2 are equal)
        System.out.println("Are emp1 and emp2 equal? " + emp1.equals(emp2));

        // 6. Using Lombok-generated hashCode() method
        System.out.println("emp1 hashCode: " + emp1.hashCode());
        System.out.println("emp2 hashCode: " + emp2.hashCode());

        // 7. Using Lombok's null check with @NonNull annotation
        try {
            Employee emp3 = new Employee(null, "Bill Gates", "Philanthropy", 100000, "bill.gates@example.com");
        } catch (NullPointerException e) {
            System.out.println("Error: " + e.getMessage());
        }
    }
}
